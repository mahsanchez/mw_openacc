
 Complete. Execution time is = 18 seconds

!cd ../source_code && make clean && make

rm -f *.o miniWeather
pgc++ -O3 -w -ta=tesla:managed -Minfo=accel  -o miniWeather miniWeather_openacc.cpp -I/opt/nvidia/hpc_sdk/Linux_x86_64/20.9/cuda/11.0/include -lnetcdf -ldl
semi_discrete_step(double *, double *, double *, double, int, double *, double *):
    264, Generating Tesla code
        264, #pragma acc loop gang, vector(32) collapse(2) /* blockIdx.x threadIdx.x */
        266,   /* blockIdx.x threadIdx.x collapsed */
    264, Generating implicit copyout(state_out[:]) [if not already present]
         Generating implicit copyin(tend[:],state_init[:]) [if not already present]
compute_tendencies_x(double *, double *, double *):
    293, Generating Tesla code
        293, #pragma acc loop gang collapse(2) /* blockIdx.x */
        295,   /* blockIdx.x collapsed */
        298, #pragma acc loop seq
        300, #pragma acc loop vector(32) /* threadIdx.x */
    293, CUDA shared memory used for d3_vals,stencil,vals
         Generating implicit copyin(hy_dens_cell[2:nz]) [if not already present]
         Generating implicit copyout(flux[:]) [if not already present]
         Generating implicit copyin(hy_dens_theta_cell[2:nz],state[:]) [if not already present]
    298, Loop carried reuse of stencil prevents parallelization
    300, Loop is parallelizable
    335, Generating Tesla code
        335, #pragma acc loop gang, vector(32) collapse(2) /* blockIdx.x threadIdx.x */
        337,   /* blockIdx.x threadIdx.x collapsed */
    335, Generating implicit copyout(tend[:]) [if not already present]
         Generating implicit copyin(flux[:]) [if not already present]
compute_tendencies_z(double *, double *, double *):
    365, Generating Tesla code
        365, #pragma acc loop gang, vector(32) collapse(2) /* blockIdx.x threadIdx.x */
        367,   /* blockIdx.x threadIdx.x collapsed */
        370, #pragma acc loop seq
        372, #pragma acc loop seq
    365, Local memory used for d3_vals,stencil,vals
         Generating implicit copyin(hy_dens_theta_int[:nz+1],hy_dens_int[:nz+1]) [if not already present]
         Generating implicit copyout(flux[:]) [if not already present]
         Generating implicit copyin(state[:],hy_pressure_int[:nz+1]) [if not already present]
    370, Loop carried reuse of stencil prevents parallelization
         Complex loop carried dependence of vals,stencil,state->,d3_vals prevents parallelization
    372, Complex loop carried dependence of state->,stencil prevents parallelization
    407, Generating Tesla code
        407, #pragma acc loop gang, vector(32) collapse(2) /* blockIdx.x threadIdx.x */
        409,   /* blockIdx.x threadIdx.x collapsed */
    407, Generating implicit copy(tend[:]) [if not already present]
         Generating implicit copyin(state[:],flux[:]) [if not already present]
set_halo_values_x(double *):
    434, Generating Tesla code
        434, #pragma acc loop gang, vector(32) /* blockIdx.x threadIdx.x */
    434, Generating implicit copy(state[:]) [if not already present]
    448, Generating Tesla code
        448, #pragma acc loop gang, vector(32) collapse(2) /* blockIdx.x threadIdx.x */
        450,   /* blockIdx.x threadIdx.x collapsed */
    448, Generating implicit copyin(hy_dens_cell[2:nz]) [if not already present]
         Generating implicit copy(state[:]) [if not already present]
         Generating implicit copyin(hy_dens_theta_cell[2:nz]) [if not already present]
set_halo_values_z(double *):
    480, Generating Tesla code
        480, #pragma acc loop gang, vector(32) /* blockIdx.x threadIdx.x */
    480, Generating implicit copyin(state[:]) [if not already present]
         Generating implicit copyout(state[((nx+4)*(ll*(nz+4)))+((nx+4)*(nz+3)):nx+4]) [if not already present]
std::abs(double):
      1, include "iostream"
          35, include "iostream"
                4, include "ostream"
                    38, include "ios"
                         42, include "ios_base.h"
                              41, include "locale_classes.h"
                                   40, include "string"
                                        55, include "basic_string.h"
                                           6493, include "string_conversions.h"
                                                  41, include "cstdlib"
                                                       13, include "cstdlib"
                                                            77, include "std_abs.h"
                                                                 72, Generating implicit acc routine seq
                                                                     Generating acc routine seq
                                                                     Generating Tesla code

!cp ../source_code/reference.nc ../source_code/checker/new.nc
!ipython ../source_code/checker/checker.py

]0;IPython: C/jupyter_notebookGroup 1 has  15  time slices
Group 2 has  15  time slices
Target Time Slice =  1


** Density **
Max Absolute Value in File 1 =  0.028405072105484024
Max Absolute Value in File 2 =  0.028405072105483636
Largest Difference between files =  1.268082860939046e-15
  File 1 Difference Percentage of Max Value =  4.464283196430343e-12  %
  File 2 Difference Percentage of Max Value =  4.4642831964304045e-12  %

** U Wind **
Max Absolute Value in File 1 =  53.64536352123402
Max Absolute Value in File 2 =  53.64536352123404
Largest Difference between files =  4.858335955759685e-13
  File 1 Difference Percentage of Max Value =  9.056394880867288e-13  %
  File 2 Difference Percentage of Max Value =  9.056394880867285e-13  %

** W Wind **
Max Absolute Value in File 1 =  30.580407658718638
Max Absolute Value in File 2 =  30.58040765871881
Largest Difference between files =  4.134470543704083e-13
  File 1 Difference Percentage of Max Value =  1.3519998130323561e-12  %
  File 2 Difference Percentage of Max Value =  1.3519998130323487e-12  %

** Theta **
Max Absolute Value in File 1 =  0.42834435362641443
Max Absolute Value in File 2 =  0.4283443536263576
Largest Difference between files =  1.1368683772161603e-13
  File 1 Difference Percentage of Max Value =  2.6540991321381892e-11  %
  File 2 Difference Percentage of Max Value =  2.6540991321385417e-11  %

!cd ../source_code && ./miniWeather

Using default values ...
nx_glob, nz_glob: 400 200
dx,dz: 50.000000 50.000000
dt: 0.166667
*** OUTPUT ***
132.500000 / 1500.000000


Complete. Execution time is = 11.033413 seconds



rm -f *.o miniWeather
pgc++ -O3 -w -ta=tesla -Minfo=accel  -o miniWeather miniWeather_openacc.cpp -I/opt/nvidia/hpc_sdk/Linux_x86_64/20.9/cuda/11.0/include -lnetcdf -ldl
main:
    167, Generating copyin(hy_pressure_int[:nz+1],state[:((nz+4)*(nx+4))*4],tend[:(nz*nx)*4],state_tmp[:((nz+4)*(nx+4))*4],hy_dens_cell[:nz+4],hy_dens_theta_cell[:nz+4],flux[:((nz+1)*(nx+1))*4]) [if not already present]
    196, Generating update self(state[:((nz+4)*(nx+4))*4])
semi_discrete_step(double *, double *, double *, double, int, double *, double *):
    282, Generating present(state_init[:((nz+4)*(nx+4))*4],state_out[:((nz+4)*(nx+4))*4],tend[:(nz*nx)*4])
         Generating Tesla code
        282, #pragma acc loop gang, vector(32) collapse(2) /* blockIdx.x threadIdx.x */
        284,   /* blockIdx.x threadIdx.x collapsed */
compute_tendencies_x(double *, double *, double *):
    311, Generating present(hy_dens_theta_cell[:nz+4],state[:((nz+4)*(nx+4))*4],flux[:((nz+1)*(nx+1))*4])
         Generating Tesla code
        311, #pragma acc loop gang collapse(2) /* blockIdx.x */
        313,   /* blockIdx.x collapsed */
        316, #pragma acc loop seq
        318, #pragma acc loop vector(32) /* threadIdx.x */
    311, CUDA shared memory used for d3_vals,stencil,vals
         Generating implicit copyin(hy_dens_cell[2:nz]) [if not already present]
    316, Loop carried reuse of stencil prevents parallelization
    318, Loop is parallelizable
    353, Generating present(tend[:(nz*nx)*4],flux[:((nz+1)*(nx+1))*4])
         Generating Tesla code
        353, #pragma acc loop gang, vector(32) collapse(2) /* blockIdx.x threadIdx.x */
        355,   /* blockIdx.x threadIdx.x collapsed */
compute_tendencies_z(double *, double *, double *):
    383, Generating present(hy_pressure_int[:nz+1],state[:((nz+4)*(nx+4))*4],flux[:((nz+1)*(nx+1))*4])
         Generating Tesla code
        383, #pragma acc loop gang, vector(32) collapse(2) /* blockIdx.x threadIdx.x */
        385,   /* blockIdx.x threadIdx.x collapsed */
        388, #pragma acc loop seq
        390, #pragma acc loop seq
    383, Local memory used for d3_vals,stencil,vals
         Generating implicit copyin(hy_dens_theta_int[:nz+1],hy_dens_int[:nz+1]) [if not already present]
    388, Loop carried reuse of stencil prevents parallelization
         Complex loop carried dependence of vals,stencil,state->,d3_vals prevents parallelization
    390, Complex loop carried dependence of state->,stencil prevents parallelization
    425, Generating present(flux[:((nz+1)*(nx+1))*4],tend[:(nz*nx)*4],state[:((nz+4)*(nx+4))*4])
         Generating Tesla code
        425, #pragma acc loop gang, vector(32) collapse(2) /* blockIdx.x threadIdx.x */
        427,   /* blockIdx.x threadIdx.x collapsed */
set_halo_values_x(double *):
    452, Generating present(state[:((nz+4)*(nx+4))*4])
         Generating Tesla code
        452, #pragma acc loop gang, vector(32) /* blockIdx.x threadIdx.x */
    466, Generating present(state[:((nz+4)*(nx+4))*4],hy_dens_theta_cell[:nz+4],hy_dens_cell[:nz+4])
         Generating Tesla code
        466, #pragma acc loop gang, vector(32) collapse(2) /* blockIdx.x threadIdx.x */
        468,   /* blockIdx.x threadIdx.x collapsed */
set_halo_values_z(double *):
    498, Generating present(state[:((nz+4)*(nx+4))*4])
         Generating Tesla code
        498, #pragma acc loop gang, vector(32) /* blockIdx.x threadIdx.x */
std::abs(double):
      1, include "iostream"
          35, include "iostream"
                4, include "ostream"
                    38, include "ios"
                         42, include "ios_base.h"
                              41, include "locale_classes.h"
                                   40, include "string"
                                        55, include "basic_string.h"
                                           6493, include "string_conversions.h"
                                                  41, include "cstdlib"
                                                       13, include "cstdlib"
                                                            77, include "std_abs.h"
                                                                 72, Generating implicit acc routine seq
                                                                     Generating acc routine seq
                                                                     Generating Tesla code


]0;IPython: C/jupyter_notebookGroup 1 has  15  time slices
Group 2 has  15  time slices
Target Time Slice =  1


** Density **
Max Absolute Value in File 1 =  0.028405072105484024
Max Absolute Value in File 2 =  0.028405072105483636
Largest Difference between files =  1.268082860939046e-15
  File 1 Difference Percentage of Max Value =  4.464283196430343e-12  %
  File 2 Difference Percentage of Max Value =  4.4642831964304045e-12  %

** U Wind **
Max Absolute Value in File 1 =  53.64536352123402
Max Absolute Value in File 2 =  53.64536352123404
Largest Difference between files =  4.858335955759685e-13
  File 1 Difference Percentage of Max Value =  9.056394880867288e-13  %
  File 2 Difference Percentage of Max Value =  9.056394880867285e-13  %

** W Wind **
Max Absolute Value in File 1 =  30.580407658718638
Max Absolute Value in File 2 =  30.58040765871881
Largest Difference between files =  4.134470543704083e-13
  File 1 Difference Percentage of Max Value =  1.3519998130323561e-12  %
  File 2 Difference Percentage of Max Value =  1.3519998130323487e-12  %

** Theta **
Max Absolute Value in File 1 =  0.42834435362641443
Max Absolute Value in File 2 =  0.4283443536263576
Largest Difference between files =  1.1368683772161603e-13
  File 1 Difference Percentage of Max Value =  2.6540991321381892e-11  %
  File 2 Difference Percentage of Max Value =  2.6540991321385417e-11  %


  rm -f *.o miniWeather
  pgc++ -O3 -w -ta=tesla -Minfo=accel  -o miniWeather miniWeather_openacc.cpp -I/opt/nvidia/hpc_sdk/Linux_x86_64/20.9/cuda/11.0/include -lnetcdf -ldl
  main:
      167, Generating copyin(hy_pressure_int[:nz+1],state[:((nz+4)*(nx+4))*4],tend[:(nz*nx)*4],state_tmp[:((nz+4)*(nx+4))*4],hy_dens_cell[:nz+4],hy_dens_theta_cell[:nz+4],flux[:((nz+1)*(nx+1))*4]) [if not already present]
      195, Generating update self(state[:((nz+4)*(nx+4))*4])
  semi_discrete_step(double *, double *, double *, double, int, double *, double *):
      280, Generating present(state_init[:((nz+4)*(nx+4))*4],state_out[:((nz+4)*(nx+4))*4],tend[:(nz*nx)*4])
           Generating Tesla code
          280, #pragma acc loop gang, vector(32) collapse(2) /* blockIdx.x threadIdx.x */
          282,   /* blockIdx.x threadIdx.x collapsed */
  compute_tendencies_x(double *, double *, double *):
      309, Generating present(hy_dens_theta_cell[:nz+4],state[:((nz+4)*(nx+4))*4],flux[:((nz+1)*(nx+1))*4])
           Generating Tesla code
          309, #pragma acc loop gang collapse(2) /* blockIdx.x */
          311,   /* blockIdx.x collapsed */
          314, #pragma acc loop seq
          316, #pragma acc loop vector(32) /* threadIdx.x */
      309, CUDA shared memory used for d3_vals,stencil,vals
           Generating implicit copyin(hy_dens_cell[2:nz]) [if not already present]
      314, Loop carried reuse of stencil prevents parallelization
      316, Loop is parallelizable
      351, Generating present(tend[:(nz*nx)*4],flux[:((nz+1)*(nx+1))*4])
           Generating Tesla code
          351, #pragma acc loop gang, vector(32) collapse(2) /* blockIdx.x threadIdx.x */
          353,   /* blockIdx.x threadIdx.x collapsed */
  compute_tendencies_z(double *, double *, double *):
      381, Generating present(hy_pressure_int[:nz+1],state[:((nz+4)*(nx+4))*4],flux[:((nz+1)*(nx+1))*4])
           Generating Tesla code
          381, #pragma acc loop gang, vector(32) collapse(2) /* blockIdx.x threadIdx.x */
          383,   /* blockIdx.x threadIdx.x collapsed */
          386, #pragma acc loop seq
          388, #pragma acc loop seq
      381, Local memory used for d3_vals,stencil,vals
           Generating implicit copyin(hy_dens_theta_int[:nz+1],hy_dens_int[:nz+1]) [if not already present]
      386, Loop carried reuse of stencil prevents parallelization
           Complex loop carried dependence of vals,stencil,state->,d3_vals prevents parallelization
      388, Complex loop carried dependence of state->,stencil prevents parallelization
      423, Generating present(flux[:((nz+1)*(nx+1))*4],tend[:(nz*nx)*4],state[:((nz+4)*(nx+4))*4])
           Generating Tesla code
          423, #pragma acc loop gang, vector(32) collapse(2) /* blockIdx.x threadIdx.x */
          425,   /* blockIdx.x threadIdx.x collapsed */
  set_halo_values_x(double *):
      450, Generating present(state[:((nz+4)*(nx+4))*4])
           Generating Tesla code
          450, #pragma acc loop gang, vector(32) /* blockIdx.x threadIdx.x */
      464, Generating present(state[:((nz+4)*(nx+4))*4],hy_dens_theta_cell[:nz+4],hy_dens_cell[:nz+4])
           Generating Tesla code
          464, #pragma acc loop gang, vector(32) collapse(2) /* blockIdx.x threadIdx.x */
          466,   /* blockIdx.x threadIdx.x collapsed */
  set_halo_values_z(double *):
      496, Generating present(state[:((nz+4)*(nx+4))*4])
           Generating Tesla code
          496, #pragma acc loop gang, vector(32) /* blockIdx.x threadIdx.x */
  std::abs(double):
        1, include "iostream"
            35, include "iostream"
                  4, include "ostream"
                      38, include "ios"
                           42, include "ios_base.h"
                                41, include "locale_classes.h"
                                     40, include "string"
                                          55, include "basic_string.h"
                                             6493, include "string_conversions.h"
                                                    41, include "cstdlib"
                                                         13, include "cstdlib"
                                                              77, include "std_abs.h"
                                                                   72, Generating implicit acc routine seq
                                                                       Generating acc routine seq
                                                                       Generating Tesla code
Profiling with data optimizations

  Complete. Execution time is = 25.999328 seconds
 Processing events...
 Capturing symbol files...
 Saving temporary "/tmp/nsys-report-ece3-65bc-1186-67f5.qdstrm" file to disk...
 Creating final output files...

 Processing [==============================================================100%]
 Saved report file to "/tmp/nsys-report-ece3-65bc-1186-67f5.qdrep"
 Exporting 7135734 events: [===============================================100%]

 Exported successfully to
 /tmp/nsys-report-ece3-65bc-1186-67f5.sqlite

 Generating CUDA API Statistics...
 CUDA API Statistics (nanoseconds)

 Time(%)      Total Time       Calls         Average         Minimum         Maximum  Name
 -------  --------------  ----------  --------------  --------------  --------------  --------------------------------------------------------------------------------
    61.2      8471645781      324015         26145.8            1560        26006702  cuStreamSynchronize
    31.7      4395596847      729000          6029.6            3139        21323249  cuLaunchKernel
     4.2       584734797      162000          3609.5            1671         8712064  cuCtxSynchronize
     2.6       361875303       54007          6700.5            2795         8443171  cuMemcpyHtoDAsync_v2
     0.2        25396102           1      25396102.0        25396102        25396102  cuMemHostAlloc
     0.0         2951897           5        590379.4            3836         1007693  cuMemAllocHost_v2
     0.0         2185242          14        156088.7            3044          442906  cuMemAlloc_v2
     0.0          462200           1        462200.0          462200          462200  cuModuleLoadDataEx
     0.0          182608          14         13043.4            7452           19770  cuMemcpyDtoHAsync_v2
     0.0          106682          21          5080.1            1827           11152  cuEventRecord
     0.0           69327          19          3648.8            1942           14399  cuEventSynchronize
     0.0           39222           5          7844.4            3991           14402  cuStreamCreate
     0.0           21397           8          2674.6             739            9823  cuEventCreate




 Generating CUDA Kernel Statistics...
 CUDA Kernel Statistics (nanoseconds)

 Time(%)      Total Time   Instances         Average         Minimum         Maximum  Name
 -------  --------------  ----------  --------------  --------------  --------------  --------------------------------------------------------------------------------------------------------------------
    66.8      5969525446       27000        221093.5          218922          492448  compute_tendencies_x_311_gpu(double*, double*, double*)
    12.4      1110648454      216000          5141.9            4928           13122  semi_discrete_step_282_gpu(double*, double*, double*, double, int, double*, double*)
     6.3       560108323      108000          5186.2            4960           14467  compute_tendencies_z_425_gpu(double*, double*, double*)
     6.1       543579857      108000          5033.1            4928           13251  compute_tendencies_x_353_gpu(double*, double*, double*)
     3.9       344487953       27000         12758.8           11746           21252  compute_tendencies_z_383_gpu(double*, double*, double*)
     2.2       193790051      108000          1794.4            1376           13058  set_halo_values_x_452_gpu(double*)
     1.8       162265535      108000          1502.5            1024           13379  set_halo_values_z_498_gpu(double*)
     0.5        47124052       27000          1745.3            1632           12610  set_halo_values_x_466_gpu(double*)



 Generating CUDA Memory Operation Statistics...
 CUDA Memory Operation Statistics (nanoseconds)

 Time(%)      Total Time  Operations         Average         Minimum         Maximum  Name
 -------  --------------  ----------  --------------  --------------  --------------  --------------------------------------------------------------------------------
    96.9        93391113       54007          1729.2            1376          240750  [CUDA memcpy HtoD]
     3.1         2944892          14        210349.4          209993          210985  [CUDA memcpy DtoH]


 CUDA Memory Operation Statistics (KiB)

               Total      Operations              Average            Minimum              Maximum  Name
 -------------------  --------------  -------------------  -----------------  -------------------  --------------------------------------------------------------------------------
           94971.414           54007                1.759              1.570             2575.500  [CUDA memcpy HtoD]
           36057.000              14             2575.500           2575.500             2575.500  [CUDA memcpy DtoH]




 Generating NVTX Push-Pop Range Statistics...
 NVTX Push-Pop Range Statistics (nanoseconds)

 Time(%)      Total Time   Instances         Average         Minimum         Maximum  Range
 -------  --------------  ----------  --------------  --------------  --------------  -------------------
    34.0     26094457691           1   26094457691.0     26094457691     26094457691  init
    33.9     25999333908           1   25999333908.0     25999333908     25999333908  while
    31.8     24424696350        9000       2713855.1         1948233      1656950587  perform_timestep
     0.3       213239826        9000         23693.3             164        18756976  copy_state



 Report file moved to "/home/u00uanklohtYGXxB4H357/openacc-mini-weather-labs/C/source_code/miniWeather_acc_profile.qdrep"
 Report file moved to "/home/u00uanklohtYGXxB4H357/openacc-mini-weather-labs/C/source_code/miniWeather_acc_profile.sqlite"


